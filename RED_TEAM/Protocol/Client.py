import socket
import ssl

# 서버의 호스트 이름 및 포트 번호 설정
server_hostname = 'localhost'
server_port = 8443

# SSL 컨텍스트 설정
context = ssl.create_default_context(ssl.Purpose.SERVER_AUTH)  # 서버 인증을 위한 SSL 컨텍스트 생성
context.check_hostname = True  # 서버의 호스트 이름을 검증하도록 설정
context.load_verify_locations("path/to/ca_certificate.pem")  # 서버의 신뢰할 수 있는 인증서 경로 지정

# 서버에 연결 설정
client_socket = socket.create_connection((server_hostname, server_port))  # 서버와의 TCP 연결 생성
ssl_client_socket = context.wrap_socket(client_socket, server_hostname=server_hostname)  # SSL로 소켓 감싸기

# 서버로 암호화된 메시지 전송
message = "안녕하세요, 서버!"  # 서버에 보낼 메시지
encrypted_message = encrypt_message(message)  # 메시지 암호화
ssl_client_socket.sendall(encrypted_message)  # 암호화된 메시지를 서버에 전송

# 서버로부터 암호화된 응답 수신 및 복호화
encrypted_response = ssl_client_socket.recv(1024)  # 서버로부터 최대 1024바이트의 암호화된 응답 수신
response = decrypt_message(encrypted_response)  # 수신한 응답을 복호화
print("서버에서 받은 응답:", response)  # 복호화된 응답 출력

# SSL 연결 종료
ssl_client_socket.close()  # SSL 소켓 닫기
